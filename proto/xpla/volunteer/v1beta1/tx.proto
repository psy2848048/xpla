syntax = "proto3";
package xpla.volunteer.v1beta1;

option go_package = "github.com/xpladev/xpla/x/volunteer/types";

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/staking/v1beta1/staking.proto";
import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";

// Msg defines the volunteer Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  // RegisterVolunteerValidator defines a method to register a new volunteer
  // validator.
  rpc RegisterVolunteerValidator(MsgRegisterVolunteerValidator)
      returns (MsgRegisterVolunteerValidatorResponse);

  // UnregisterVolunteerValidator defines a method to unregister a volunteer
  rpc UnregisterVolunteerValidator(MsgUnregisterVolunteerValidator)
      returns (MsgUnregisterVolunteerValidatorResponse);
}

// MsgRegisterVolunteerValidator defines a message to register a new volunteer
// validator.
message MsgRegisterVolunteerValidator {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "xpladev/MsgRegisterVolunteerValidator";

  // authority is the address of the governance account.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  cosmos.staking.v1beta1.Description validator_description = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  string delegator_address = 3
      [ (gogoproto.moretags) = "yaml:\"delegator_address\"" ];
  string validator_address = 4
      [ (gogoproto.moretags) = "yaml:\"validator_address\"" ];
  google.protobuf.Any pubkey = 5
      [ (cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey" ];
  cosmos.base.v1beta1.Coin amount = 6
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgRegisterVolunteerValidatorResponse defines the RegisterVolunteerValidator
// response.
message MsgRegisterVolunteerValidatorResponse {}

// MsgUnregisterVolunteerValidator defines a message to unregister a volunteer
// validator.
message MsgUnregisterVolunteerValidator {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "xpladev/MsgUnregisterVolunteerValidator";

  // authority is the address of the governance account.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string validator_address = 2
      [ (gogoproto.moretags) = "yaml:\"validator_address\"" ];
}

// MsgUnregisterVolunteerValidatorResponse defines the
// UnregisterVolunteerValidator response.
message MsgUnregisterVolunteerValidatorResponse {}
